# -*- coding: utf-8 -*-
"""movie project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11xRsjxHCh9xTx6tqc5lxQAcfQPpqt8Hf
"""

# Commented out IPython magic to ensure Python compatibility.
# Import needed libraries

import pandas as pd
import seaborn as sns

import matplotlib
import matplotlib.pyplot as plt
plt.style.use('ggplot')
from matplotlib.pyplot import figure

# %matplotlib inline
matplotlib.rcParams['figure.figsize'] = (12,8)

df = pd.read_csv('/content/drive/MyDrive/movie project files/movies.csv')

#drop Nan and check the peak of the dataframe
df = df.dropna()
df.head(3)

#Check for NANs in every column

for col in df.columns:
  number_of_nan = df[col].isnull().sum()
  print('{}  has {} NAN'.format(col,number_of_nan))

df.tail(5)

"""#Check for the correlation.
##Assumptions
1. The first assumption is that there is a strong correlation between the budget and the gross
2. The second assumption is that there is a strong correlation between the rating and the budget, suggesting that a higher budget means a higher score.
3. Another probable correlation is between the company and the gross

"""

# Calculation and ploting of correlations (This Heatmap includes only numerical data)
correlation_matrix = df.corr(method='pearson')

sns.heatmap(correlation_matrix, annot = True)
plt.title("Correlation matrix for Numerical Features")
plt.xlabel("Movie features")
plt.ylabel("Movie features")
plt.show()

# To check the correlation between all data, the object data need to be categolized first
#drop data that can not correlate with other. 
correlation_df = df.drop(['name', 'rating', 'year','released','votes','runtime'], axis=1)

correlation_matrix = correlation_df.apply(lambda x: x.factorize()[0]).corr(method='pearson')
sns.heatmap(correlation_matrix, annot = True)
plt.title("Correlation matrix for Movies")
plt.xlabel("Movie features")
plt.ylabel("Movie features")
plt.show()

